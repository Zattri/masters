setwd("C://Users/Zattri/Desktop/masters/data_mining/session6")
getwd()
weights = rep(0.1,10)
weights
epsilon = ((0.1+0.1)/1)
alpha = 0.5 * log((1-epsilon)/epsilon)
weights.correct = 0.1 * exp(-alpha)
weights.incorrect = 0.1 * exp(alpha)
library(adabag)
weights.correct.new = weights.correct / (weights.correct*8 + weights.incorrect*2)
weights = rep(0.1,10)
epsilon = ((0.1+0.1)/1)
alpha = 0.5 * log((1-epsilon)/epsilon)
weights.correct = 0.1 * exp(-alpha)
weights.incorrect = 0.1 * exp(alpha)
weights.correct.new = weights.correct / (weights.correct*8 + weights.incorrect*2)
weights.incorrect.new = weights.incorrect / (weights.correct*8 + weights.incorrect*2)
adaboost.result = boosting(Species~., data=iris, mfinal=50)
adaboost.result$weights
adaboost.result$tree[[1]]
adaboost.result$tree[[2]]
adaboost.result$importance
set.seed(1234)
library("randomForest")
install.packages("randomForest")
library("randomForest")
set.seed(1234)
forest300 = randomFores(Species~., data=iris, ntree=300)
forest300 = randomForest(Species~., data=iris, ntree=300)
forest300
forest300.mtry1 = randomForest(Species~., data=iris, ntree=300, mtry=1)
forest300.mtry1
forest300
forest300
forest300.mtry1
forest300.mtry3 = randomForest(Species~., data=iris, ntree=300, mtry=3)
forest300.mtry3
forest500 = randomForest(Species~., data=iris, ntree=300)
plot(forest500)
importance(forest500)
varImpPlot(forest500)
plot(forest500)
install.packages("FSelector")
library("FSelector")
getwd()
infogain = information.gain(contactLenses, contact)
infogain = information.gain(contactLenses~., contact)
infogain
IG = information.gain(contactLenses~., contact)
contact = read.csv("contact.csv")
infogain = information.gain(contactLenses~., contact)
infogain
weather = read.csv("weather.csv")
weather
library("rpart")
library("rpart.plot")
install.packages(c("rpart", "rpart.plot"))
library("FSelector")
library("rpart")
library("rpart.plot")
decisionTree = rpart(play~., method = "class", control = repart.control(minsplit = 1), data=weather)
decisionTree = rpart(play~., method = "class", control = rpart.control(minsplit = 1), data=weather)
prp(decisionTree, main="Decision Tree", box.palette = "auto", faclen = 0)
rpart(play~., method = "class", control = rpart.control(minsplit = 1), params= list(split = "information"), data=weather)
prp(decisionTree.infoGain, main="Decision Tree using Information Gain", box.palette = "auto", faclen = 0)
decisionTree.infoGain =
rpart(play~., method = "class", control = rpart.control(minsplit = 1), params= list(split = "information"), data=weather)
prp(decisionTree.infoGain, main="Decision Tree using Information Gain", box.palette = "auto", faclen = 0)
decisionTree.infoGain = rpart(play~., method = "class",
control = rpart.control(minsplit = 1), params= list(split = "information"),
data=weather)
decisionTree.infoGain = rpart(play~., method = "class",
control = rpart.control(minsplit = 1), parms= list(split = "information"),
data=weather)
decisionTree.infoGain =
rpart(play~., method = "class", control = rpart.control(minsplit = 1), parms= list(split = "information"), data=weather)
prp(decisionTree.infoGain, main="Decision Tree using Information Gain", box.palette = "auto", faclen = 0)
